package nag;
import java.util.LinkedList;

public class prod_c {
		public LinkedList<Integer> list;
		public Integer capacity;
		
		public prod_c(int capacity)
		{
			this.list= new LinkedList<Integer>();
			this.capacity=capacity;
		}
		
		public void produce()throws InterruptedException
		{
			int value=0;
			
			while(true)
			{	synchronized(this)
				{
					while(list.size()== capacity)
						wait();
					
					System.out.println("Producer produced: "+value);
					list.add(value++);
					
					notify();
					
					Thread.sleep(1000);
				}
			}
		}
	
		public void consume() throws InterruptedException{
			while(true)
			{
				synchronized(this)
				{
					while(list.size()== 0)
					{
						wait();
					}
					int val= list.removeFirst();
					System.out.println("Consumer consumed: "+val);
					
					notify();
					
					Thread.sleep(1000);
				}
			}
		}
		
		public static void main(String []args)
		{
			prod_c pc= new prod_c(10);
			
			Thread producer = new Thread(new Runnable()
			{
				public void run()
				{
					try {
						pc.produce();
					}
						catch(InterruptedException e)
						{
							e.printStackTrace();
						}
				}
			});
			
			Thread consumer =new Thread(new Runnable() {
				public void run() {
				try {
					pc.consume();
				}
				catch(InterruptedException e){
					e.printStackTrace();
				}
				}
			});
			producer.start();
			consumer.start();
		}
	}
